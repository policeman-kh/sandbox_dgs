plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'java-library'
	// id "com.netflix.dgs.codegen" version "4.0.10"
	// Added to build client code with node.js.
	id 'com.github.node-gradle.node' version '3.0.1'
}

group = 'sandbox'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext['kotlin.version'] = '1.4.31'
// ref. https://github.com/Netflix/dgs-framework/issues/1281#issuecomment-1284694300
ext['graphql-java.version'] = '19.2'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:5.5.3'))
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'
	// For subscription.
	implementation 'com.netflix.graphql.dgs:graphql-dgs-subscriptions-websockets-autoconfigure'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	// To output html.
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// For metrics.
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

// Added to build client code with node.js.
node {
	version = '16.6.0'
	npmVersion = '7.19.1'
	download = true
	nodeModulesDir = file("${project.projectDir}")
}

npm_run_build.dependsOn npm_install
processResources.dependsOn npm_run_build

test {
	useJUnitPlatform()
}
